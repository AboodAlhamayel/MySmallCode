#include<iostream>
#include "MyLib.h"
#include "SumLib.h"
#include<iomanip>
#include <cmath> //We use ceil
using namespace std;

int RandomNumber(int From, int To)
{
    //Function to generate a random number

    int Random = rand() % (To - From + 1) + From;
    return Random;
}

void FillMatrixWithRandomNumbers(int arr[3][3], short Rows, short Cols)
{
    for (int i = 0; i < Rows; i++)
    {
        for (int j = 0; j < Cols; j++)
        {
            arr[i][j] = RandomNumber(1, 10);
        }
    }
}

int Element(int Matrix1[3][3], short first, short last)
{
    return (Matrix1[first][last]);
}

void PrintMatrix(int arr[3][3], short Rows, short Cols)
{
    for (int i = 0; i < Rows; i++)
    {
        for (int j = 0; j < Cols; j++)
        {
            //printf(" %0*d  ", 2, arr[i][j]);
            cout << setw(3) << arr[i][j] << "   ";
        }
        cout << endl;
    }
}

bool IsNumberInMatrix(int Matrix2[3][3], int Number, short Rows, short Cols)
{
    for (short i = 0; i < Rows; i++)
    {
        for (short j = 0; j < Cols; j++)
        {
            if (Number == Matrix2[i][j])
                return true;
        }
    }
    return false;
}

void PrintIntersectedNumbers(int Matrix1[3][3], int Matrix2[3][3], short Rows, short Cols)
{
    int Number = 0;
    for (short i = 0; i < Rows; i++)
    {
        for (short j = 0; j < Cols; j++)
        {
            Number = Matrix1[i][j];
            if (IsNumberInMatrix(Matrix2, Number, Rows, Cols))
            {
                cout << setw(3) << Number << "     ";
            }
        }
    }
}

int main()
{
    srand((unsigned)time(NULL));

    int Matrix1[3][3], Matrix2[3][3], IntersectedNumbers[9], Elements[9];

    FillMatrixWithRandomNumbers(Matrix1, 3, 3);
    cout << "Matrix1 :\n";
    PrintMatrix(Matrix1, 3, 3);

    FillMatrixWithRandomNumbers(Matrix2, 3, 3);
    cout << "\nMatrix2 :\n";
    PrintMatrix(Matrix2, 3, 3);

    cout << "\nIntersected Numbers are :\n";
    PrintIntersectedNumbers(Matrix1, Matrix2, 3, 3);


    system("pause>0");

    return 0;
}
