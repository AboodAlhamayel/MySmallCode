#include<iostream>
#include"MyLib.h"
#include"SumLib.h"
#include <string>
#include<vector>
using namespace std;

string ReadString()
{
    string S1;
    cout << "Please Enter Your String ?\n";
    getline(cin, S1);
    return S1;
}

vector<string> SplitString(string S1, string Delim)
{
    vector<string> vString;

    short Pos = 0;
    string sWord;

    while ((Pos = S1.find(Delim)) != std::string::npos)
    {
        sWord = S1.substr(0, Pos);
        if (sWord != "")
        {
            vString.push_back(sWord);
        }

        S1.erase(0, Pos + Delim.length());
    }

    if (S1 != "")
    {
        vString.push_back(S1);
    }

    return vString;
}

int main()
{
    vector <string> vString;

    vString = SplitString(ReadString(), " ");

    cout << "Tokens = " << vString.size() << endl;

    for (string& s : vString)
    {
        cout << s << endl;
    }

    system("pause>0");

    return 0;
}

#######################################################################
#######################################################################
#######################################################################

#include<iostream>
#include"MyLib.h"
#include"SumLib.h"
#include <string>
#include<vector>
using namespace std;

string ReadString()
{
    string S1;
    cout << "Please Enter Your String ?\n";
    getline(cin, S1);
    return S1;
}

short CountWords(string S1)
{
    string delim = " "; //delimiter
    short Pos = 0;
    short Counter = 0;
    string sWord; //define a string variable

    //use find() function to get the position of the delimiters
    while ((Pos = S1.find(delim)) != std::string::npos)  // if no space is found, find() returns std::string::npos
    {
        sWord = S1.substr(0, Pos); // Store the word
        if (sWord != "")
        {
            Counter++;
        }

        S1.erase(0, Pos + delim.length()); // erase() until position and move to next word.
    }

    if (S1 != "")
    {
        Counter++; //it counts the last word of the string
    }
    return Counter;
}

vector <string> EachWordInString(string S1, vector<string>& vWords, string delim)
{
    short Pos = 0;
    string sWord; //define a string variable

    //use find() function to get the position of the delimiters
    while ((Pos = S1.find(delim)) != std::string::npos)  // if no space is found, find() returns std::string::npos
    {
        sWord = S1.substr(0, Pos); // Store the word
        if (sWord != "")
        {
            vWords.push_back(sWord);
        }

        S1.erase(0, Pos + delim.length()); // erase() until position and move to next word.
    }

    if (S1 != "")
    {
        vWords.push_back(S1);
    }

    return vWords;
}

vector <string> Split(string S1, string delim)
{
    vector <string> vWords;

    cout << "Tokens = " << CountWords(S1) << endl;

    EachWordInString(S1, vWords, delim);

    return vWords;
}

void printVector(vector <string> vWords)
{
    for (string W : vWords)
    {
        cout << W << endl;
    }
}

int main()
{
    string S1 = ReadString();
    string delim = " ";

    vector <string> vWords = Split(S1, delim);

    printVector(vWords);

    system("pause>0");

    return 0;
}
