#include<iostream>
#include "MyLib.h"
#include "SumLib.h"
#include<iomanip>
using namespace std;

int RandomNumber(int From, int To)
{
    //Function to generate a random number

    int Random = rand() % (To - From + 1) + From;
    return Random;
}

void FillMatrixWithRandomNumbers(int arr[3][3], short Rows, short Cols)
{
    for (int i = 0; i < Rows; i++)
    {
        for (int j = 0; j < Cols; j++)
        {
            arr[i][j] = RandomNumber(1, 10);
        }
    }
}

void PrintMatrix(int arr[3][3], short Rows, short Cols)
{
    for (int i = 0; i < Rows; i++)
    {
        for (int j = 0; j < Cols; j++)
        {
            printf(" %0*d  ", 2, arr[i][j]);
            //cout << setw(3) << arr[i][j] << "   ";
        }
        cout << endl;
    }
}

void MultiplyMatrix(int Matrix1[3][3], int Matrix2[3][3], int MatrixResults[3][3], short Rows, short Cols)
{
    for (short i = 0; i < Rows; i++)
    {
        for (short j = 0; j < Cols; j++)
        {
            MatrixResults[i][j] = Matrix1[i][j] * Matrix2[i][j];
        }
    }
}

int main()
{
    srand((unsigned)time(NULL));
    
    int Matrix1[3][3], Matrix2[3][3], MatrixResults[3][3];

    FillMatrixWithRandomNumbers(Matrix1, 3, 3);
    cout << "Matrix1 :\n";
    PrintMatrix(Matrix1, 3, 3);

    FillMatrixWithRandomNumbers(Matrix2, 3, 3);
    cout << "\nMatrix2 :\n";
    PrintMatrix(Matrix2, 3, 3);

    MultiplyMatrix(Matrix1, Matrix2, MatrixResults, 3, 3);
    cout << "\nResults :\n";
    PrintMatrix(MatrixResults, 3, 3);

    system("pause>0");

    return 0;
}

#######################################################################
#######################################################################
#######################################################################

#include<iostream>
#include "MyLib.h"
#include "SumLib.h"
#include<iomanip>
using namespace std;

int RandomNumber(int From, int To)
{
    //Function to generate a random number

    int Random = rand() % (To - From + 1) + From;
    return Random;
}

void FillMatrixWithRandomNumbers(int arr[3][3], short Rows, short Cols)
{
    for (int i = 0; i < Rows; i++)
    {
        for (int j = 0; j < Cols; j++)
        {
            arr[i][j] = RandomNumber(1, 10);
        }
    }
}

void PrintMatrix(int arr[3][3], short Rows, short Cols)
{
    for (int i = 0; i < Rows; i++)
    {
        for (int j = 0; j < Cols; j++)
        {
            printf(" %0*d  ", 2, arr[i][j]);
            //cout << setw(3) << arr[i][j] << "   ";
        }
        cout << endl;
    }
}

void MultiplyMatrix(int arr[3][3], int arr1[3][3], int arrMultyply[3][3], short Rows, short Cols)
{
    for (short i = 0; i < Rows; i++)
    {
        for (short j = 0; j < Cols; j++)
        {
            arrMultyply[i][j] = arr[i][j] * arr1[i][j];
        }
    }
}

int main()
{
    srand((unsigned)time(NULL));
    
    int arr[3][3], arr1[3][3], arrMultyply[3][3];

    FillMatrixWithRandomNumbers(arr, 3, 3);
    cout << "Matrix1 :\n";
    PrintMatrix(arr, 3, 3);

    FillMatrixWithRandomNumbers(arr1, 3, 3);
    cout << "\nMatrix2 :\n";
    PrintMatrix(arr1, 3, 3);

    MultiplyMatrix(arr, arr1, arrMultyply, 3, 3);
    cout << "\nResults :\n";
    PrintMatrix(arrMultyply, 3, 3);

    system("pause>0");

    return 0;
}
